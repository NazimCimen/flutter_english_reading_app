// Mocks generated by Mockito 5.4.5 from annotations
// in english_reading_app/test/saved_articles/data/repository/saved_articles_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cloud_firestore/cloud_firestore.dart' as _i6;
import 'package:english_reading_app/core/connection/network_info.dart' as _i7;
import 'package:english_reading_app/feature/saved_articles/data/datasource/saved_articles_remote_data_source.dart'
    as _i3;
import 'package:english_reading_app/product/model/article_model.dart' as _i5;
import 'package:internet_connection_checker/internet_connection_checker.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeInternetConnectionChecker_0 extends _i1.SmartFake
    implements _i2.InternetConnectionChecker {
  _FakeInternetConnectionChecker_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SavedArticlesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSavedArticlesRemoteDataSource extends _i1.Mock
    implements _i3.SavedArticlesRemoteDataSource {
  MockSavedArticlesRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.ArticleModel>> getSavedArticles({
    int? limit,
    _i6.DocumentSnapshot<Object?>? lastDocument,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSavedArticles,
          [],
          {
            #limit: limit,
            #lastDocument: lastDocument,
          },
        ),
        returnValue:
            _i4.Future<List<_i5.ArticleModel>>.value(<_i5.ArticleModel>[]),
      ) as _i4.Future<List<_i5.ArticleModel>>);

  @override
  _i4.Future<void> saveArticle(_i5.ArticleModel? article) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveArticle,
          [article],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> removeArticle(String? articleId) => (super.noSuchMethod(
        Invocation.method(
          #removeArticle,
          [articleId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> isArticleSaved(String? articleId) => (super.noSuchMethod(
        Invocation.method(
          #isArticleSaved,
          [articleId],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<Set<String>> getSavedArticleIds() => (super.noSuchMethod(
        Invocation.method(
          #getSavedArticleIds,
          [],
        ),
        returnValue: _i4.Future<Set<String>>.value(<String>{}),
      ) as _i4.Future<Set<String>>);

  @override
  _i4.Future<List<_i5.ArticleModel>> searchSavedArticles(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchSavedArticles,
          [query],
        ),
        returnValue:
            _i4.Future<List<_i5.ArticleModel>>.value(<_i5.ArticleModel>[]),
      ) as _i4.Future<List<_i5.ArticleModel>>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i7.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.InternetConnectionChecker get connectivity => (super.noSuchMethod(
        Invocation.getter(#connectivity),
        returnValue: _FakeInternetConnectionChecker_0(
          this,
          Invocation.getter(#connectivity),
        ),
      ) as _i2.InternetConnectionChecker);

  @override
  _i4.Future<bool> get currentConnectivityResult => (super.noSuchMethod(
        Invocation.getter(#currentConnectivityResult),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
