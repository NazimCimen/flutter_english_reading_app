// Mocks generated by Mockito 5.4.5 from annotations
// in english_reading_app/test/word_detail/presentation/viewmodel/word_detail_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:io' as _i12;

import 'package:dartz/dartz.dart' as _i2;
import 'package:english_reading_app/core/error/failure.dart' as _i5;
import 'package:english_reading_app/feature/word_detail/domain/usecase/get_word_detail_from_api_usecase.dart'
    as _i3;
import 'package:english_reading_app/feature/word_detail/domain/usecase/get_word_detail_from_local_usecase.dart'
    as _i7;
import 'package:english_reading_app/feature/word_detail/domain/usecase/is_word_saved_usecase.dart'
    as _i9;
import 'package:english_reading_app/feature/word_detail/domain/usecase/save_word_to_local_usecase.dart'
    as _i8;
import 'package:english_reading_app/product/model/dictionary_entry.dart' as _i6;
import 'package:english_reading_app/product/model/user_model.dart' as _i11;
import 'package:english_reading_app/product/services/user_service.dart' as _i10;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetWordDetailFromApiUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWordDetailFromApiUseCase extends _i1.Mock
    implements _i3.GetWordDetailFromApiUseCase {
  MockGetWordDetailFromApiUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.DictionaryEntry?>> call(
          String? word) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [word],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.DictionaryEntry?>>.value(
                _FakeEither_0<_i5.Failure, _i6.DictionaryEntry?>(
          this,
          Invocation.method(
            #call,
            [word],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.DictionaryEntry?>>);
}

/// A class which mocks [GetWordDetailFromLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWordDetailFromLocalUseCase extends _i1.Mock
    implements _i7.GetWordDetailFromLocalUseCase {
  MockGetWordDetailFromLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.DictionaryEntry?>> call(
          String? word) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [word],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.DictionaryEntry?>>.value(
                _FakeEither_0<_i5.Failure, _i6.DictionaryEntry?>(
          this,
          Invocation.method(
            #call,
            [word],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.DictionaryEntry?>>);
}

/// A class which mocks [SaveWordToLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWordToLocalUseCase extends _i1.Mock
    implements _i8.SaveWordToLocalUseCase {
  MockSaveWordToLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> call(
          _i6.DictionaryEntry? entry) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [entry],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, String>>.value(
            _FakeEither_0<_i5.Failure, String>(
          this,
          Invocation.method(
            #call,
            [entry],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, String>>);
}

/// A class which mocks [IsWordSavedUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockIsWordSavedUseCase extends _i1.Mock
    implements _i9.IsWordSavedUseCase {
  MockIsWordSavedUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> call(
    String? word,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [
            word,
            userId,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [
              word,
              userId,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
}

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserService extends _i1.Mock implements _i10.UserService {
  MockUserService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool isUserSignIn() => (super.noSuchMethod(
        Invocation.method(
          #isUserSignIn,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<_i11.UserModel?> getUserById({required String? userId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserById,
          [],
          {#userId: userId},
        ),
        returnValue: _i4.Future<_i11.UserModel?>.value(),
      ) as _i4.Future<_i11.UserModel?>);

  @override
  _i4.Future<bool> setUserToFirestore() => (super.noSuchMethod(
        Invocation.method(
          #setUserToFirestore,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> updateUser(_i11.UserModel? model) => (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [model],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> updatePassword({required String? newPassword}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [],
          {#newPassword: newPassword},
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> reAuthenticateUser({required String? currentPassword}) =>
      (super.noSuchMethod(
        Invocation.method(
          #reAuthenticateUser,
          [],
          {#currentPassword: currentPassword},
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<String?> uploadProfileImage({required _i12.File? imageFile}) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadProfileImage,
          [],
          {#imageFile: imageFile},
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<bool> updateProfileImage({required String? imageUrl}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfileImage,
          [],
          {#imageUrl: imageUrl},
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
